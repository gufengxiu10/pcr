version: "3"

services:
  go:
    container_name: pcr_go
    build: ./setting/goCqhttp
    ports:
      - "8088:8088"
    privileged: true
    restart: always
    stdin_open: true
    tty: true
    networks:
      pcr:
        ipv4_address: 172.200.1.3
    volumes:
      - ./project/go:/go
  minio:
    image: minio/minio:latest
    container_name: pcr_minio
    networks:
      pcr:
        ipv4_address: 172.200.1.4
    ports:
      - "9000:9000"
    restart: always
    command: server /data
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123 #大于等于8位
    logging:
      options:
        max-size: "30M" # 最大文件上传限制
      driver: json-file
    volumes:
      # 必须先创建目录
      - ./setting/minio/data:/data # 映射文件路径
      - ./setting/minio/config:/root/.minio# 映射文件路径
  php:
    container_name: pcr_php
    build: ./setting/php
    privileged: true
    restart: always
    working_dir: /www
    expose:
      - "9000"
    links:
      - pyton
    dns: 144.114.114.114
    networks:
      pcr:
        ipv4_address: 172.200.1.2
    volumes:
      - ./setting/php/php.ini:/usr/local/etc/php/php.ini
      - ./project/php/:/www
      - ./setting/minio/data:/images
      - ./setting/php/supervisord.conf:/etc/supervisor/supervisord.conf
      - ./setting/php/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ./setting/php/supervisord/conf/:/etc/supervisor/conf.d/
      - ./setting/php/supervisord/log/:/tmp/supervisord/
  pyton:
    container_name: pcr_py
    build: ./setting/python
    privileged: true
    restart: always
    stdin_open: true
    tty: true
    working_dir: /www
    expose:
      - "4001"
      - "80"
    networks:
      pcr:
        ipv4_address: 172.200.1.5
    volumes:
      - ./project/python:/www
      - ./setting/python/pip.conf:/root/.pip/pip.conf
      - ./setting/minio/data/pcr:/images
      # - ./setting/python/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ./setting/python/supervisord/conf/:/etc/supervisor/conf.d/
      - ./setting/python/supervisord/log/:/tmp/supervisord/
  nginx:
    container_name: pcr_nginx
    build:
      context: ./setting/nginx
    networks:
      pcr:
        ipv4_address: 172.200.1.6
    ports:
      - "81:80"
    privileged: true
    restart: always
    links:
      - pyton
    volumes:
      - ./setting/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./setting/nginx/conf/conf.d:/etc/nginx/conf.d
      - ./setting/nginx/log:/var/log/nginx
  redis:
    container_name: pcr_redis
    build: ./setting/redis
    privileged: true
    restart: always
    stdin_open: true
    tty: true
    networks:
      pcr:
        ipv4_address: 172.200.1.7
    expose:
      - "6379"
    ports:
      - "12000:6379"
    volumes:
      - ./setting/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    sysctls:
      - net.core.somaxconn=1024
    command: > # 注意多个命令时的写法
      bash -c "echo 'vm.overcommit_memory = 1' >> /etc/sysctl.conf
      && redis-server /usr/local/etc/redis/redis.conf --appendonly yes"
networks:
  pcr:
    external: true